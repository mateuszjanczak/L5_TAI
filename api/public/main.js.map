{"version":3,"sources":["./src/app/components/blog-item/blog-item.component.ts","./src/app/components/blog-item/blog-item.component.html","./src/app/components/blog-item-text/blog-item-text.component.ts","./src/app/components/blog-item-text/blog-item-text.component.html","./src/environments/environment.ts","./src/app/pipes/filter.pipe.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/blog-item-image/blog-item-image.component.ts","./src/app/components/blog-item-image/blog-item-image.component.html","./src/app/services/data.service.ts","./src/app/components/contact/contact.component.ts","./src/app/components/contact/contact.component.html","./src/app/pipes/summary.pipe.ts","./src/app/components/blog-home/blog-home.component.ts","./src/app/components/blog-home/blog-home.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/blog-item-details/blog-item-details.component.ts","./src/app/components/blog-item-details/blog-item-details.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/blog/blog.component.html","./src/app/components/blog/blog.component.ts","./src/app/shared/search-bar/search-bar.component.ts","./src/app/shared/search-bar/search-bar.component.html","./src/app/app-routing.module.ts","./src/app/directives/text-format.directive.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'blog-item',\r\n  templateUrl: './blog-item.component.html',\r\n  styleUrls: ['./blog-item.component.css']\r\n})\r\nexport class BlogItemComponent implements OnInit {\r\n\r\n  @Input() image: string;\r\n  @Input() text: string;\r\n  @Input() id: number;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"col\">\r\n  <blog-item-image [image]=\"image\"></blog-item-image>\r\n  <blog-item-text [id]=\"id\" [text]=\"text\"></blog-item-text>\r\n</div>\r\n\r\n","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'blog-item-text',\r\n  templateUrl: './blog-item-text.component.html',\r\n  styleUrls: ['./blog-item-text.component.css']\r\n})\r\nexport class BlogItemTextComponent implements OnInit {\r\n\r\n  @Input() text: string;\r\n  @Input() id: number;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h5 class=\"card-title\">{{ text  | summary:35 }}</h5>\r\n<a [routerLink]=\"['/blog/detail/', id]\" class=\"btn btn-primary\">Więcej</a>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n\r\n  transform(value: any[], filterText: any): any {\r\n    if (!value) {\r\n      return [];\r\n    }\r\n    if (!filterText) {\r\n      return value;\r\n    }\r\n\r\n    filterText = filterText.toLowerCase();\r\n\r\n    return value.filter(val => {\r\n      return val.title.toLowerCase().includes(filterText);\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>Mateusz Janczak</title>\r\n</head>\r\n<body>\r\n<div class=\"container border p-5\">\r\n  <div class=\"row\">\r\n    <div class=\"col-9\">\r\n      <p>\r\n        Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n      </p>\r\n    </div>\r\n    <div class=\"col-3\">\r\n      <img class=\"img\" src=\"https://static.scientificamerican.com/sciam/cache/file/92E141F8-36E4-4331-BB2EE42AC8674DD3_source.jpg\" alt=\"kot\">\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<footer class=\"footer bg-light fixed-bottom text-center pt-3\">\r\n  <p>Copyrights © Mateusz Janczak | 2021</p>\r\n</footer>\r\n</body>\r\n</html>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'blog-item-image',\r\n  templateUrl: './blog-item-image.component.html',\r\n  styleUrls: ['./blog-item-image.component.css']\r\n})\r\nexport class BlogItemImageComponent implements OnInit {\r\n\r\n  @Input() image: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<img [src]=\"image\" class=\"card-img-top\">\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  private url = 'https://blogtai.herokuapp.com';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAll() {\r\n    return this.http.get(this.url + '/api/posts/');\r\n  }\r\n\r\n  getById(id) {\r\n    return this.http.get(this.url + '/api/posts/' + id);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.css']\r\n})\r\nexport class ContactComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>Mateusz Janczak</title>\r\n</head>\r\n<body>\r\n<div class=\"container mt-5 p-5 border\">\r\n  <div class=\"text-center mb-5\">\r\n    <h1>Uzupełnij dane</h1>\r\n  </div>\r\n  <form class=\"mb-3\">\r\n    <div class=\"row mb-3\">\r\n      <label for=\"inputFirstname\" class=\"col-sm-2 col-form-label\">Imię</label>\r\n      <div class=\"col-sm-10\">\r\n        <input type=\"text\" class=\"form-control\" id=\"inputFirstname\" placeholder=\"Podaj imię\">\r\n      </div>\r\n    </div>\r\n    <div class=\"row mb-3\">\r\n      <label for=\"inputLastname\" class=\"col-sm-2 col-form-label\">Nazwisko</label>\r\n      <div class=\"col-sm-10\">\r\n        <input type=\"text\" class=\"form-control\" id=\"inputLastname\" placeholder=\"Podaj nazwisko\">\r\n      </div>\r\n    </div>\r\n    <div class=\"row mb-3\">\r\n      <label for=\"inputEmail\" class=\"col-sm-2 col-form-label\">Email</label>\r\n      <div class=\"col-sm-10\">\r\n        <input type=\"email\" class=\"form-control\" id=\"inputEmail\" placeholder=\"Podaj email\">\r\n      </div>\r\n    </div>\r\n    <fieldset class=\"row mb-3\">\r\n      <legend class=\"col-form-label col-sm-2 pt-0\">Płeć</legend>\r\n      <div class=\"col-sm-10\">\r\n        <div class=\"form-check\">\r\n          <input class=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"radioMale\" value=\"male\" checked>\r\n          <label class=\"form-check-label\" for=\"radioMale\">\r\n            Mężczyzna\r\n          </label>\r\n        </div>\r\n        <div class=\"form-check\">\r\n          <input class=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"radioFemale\" value=\"female\">\r\n          <label class=\"form-check-label\" for=\"radioFemale\">\r\n            Kobieta\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </fieldset>\r\n    <div class=\"row mb-3\">\r\n      <label for=\"textareaDescription\" class=\"col-sm-2 col-form-label\">Opis</label>\r\n      <div class=\"col-sm-10\">\r\n        <textarea class=\"form-control\" id=\"textareaDescription\" placeholder=\"Podaj opis\"></textarea>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mb-3\">\r\n      <label for=\"inputAge\" class=\"col-sm-2 col-form-label\">Wiek</label>\r\n      <div class=\"col-sm-10\">\r\n        <input type=\"number\" class=\"form-control\" id=\"inputAge\" placeholder=\"18\">\r\n      </div>\r\n    </div>\r\n    <div class=\"row mb-3\">\r\n      <label for=\"inputMaritalStatus\" class=\"col-sm-2 col-form-label\">Stan cywilny</label>\r\n      <div class=\"col-sm-10\">\r\n        <select class=\"form-select\" id=\"inputMaritalStatus\" aria-label=\".form-select-sm example\">\r\n          <option value=\"Panna/Kawale\" selected>Panna / Kawaler</option>\r\n          <option value=\"Żonaty/Zamężna\">Żonaty / Zamężna</option>\r\n          <option value=\"Wdowiec/Wdowa\">Wdowiec / Wdowa</option>\r\n          <option value=\"Rozwiedziony/Rozwiedziona\">Rozwiedziony / Rozwiedziona</option>\r\n          <option value=\"Separowany/Separowana\">Separowany / Separowana</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n    <div class=\"text-center mt-5\">\r\n      <button type=\"reset\" class=\"btn btn-primary mx-1\">Wyczyść</button>\r\n      <button type=\"submit\" class=\"btn btn-primary mx-1\">Wyślij</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<footer class=\"footer bg-light fixed-bottom text-center pt-3\">\r\n  <p>Copyrights © Mateusz Janczak | 2021</p>\r\n</footer>\r\n</body>\r\n</html>\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'summary'\r\n})\r\nexport class SummaryPipe implements PipeTransform {\r\n\r\n  transform(value: string, limit: any): any {\r\n    if (!value) {\r\n      return null;\r\n    }\r\n    return value.substr(0, limit) + '...';\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'blog-home',\r\n  templateUrl: './blog-home.component.html',\r\n  styleUrls: ['./blog-home.component.css']\r\n})\r\nexport class BlogHomeComponent implements OnInit {\r\n\r\n  filterText: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  getName($event: string) {\r\n    this.filterText = $event;\r\n  }\r\n}\r\n","<search-bar (name)=\"getName($event)\">\r\n</search-bar>\r\n<blog [filterText]=\"filterText\">\r\n</blog>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'blog';\r\n}\r\n","<navbar></navbar>\r\n<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { BlogComponent } from './components/blog/blog.component';\r\nimport { ContactComponent } from './components/contact/contact.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { BlogItemComponent } from './components/blog-item/blog-item.component';\r\nimport { BlogItemTextComponent } from './components/blog-item-text/blog-item-text.component';\r\nimport { BlogItemImageComponent } from './components/blog-item-image/blog-item-image.component';\r\nimport { BlogItemDetailsComponent } from './components/blog-item-details/blog-item-details.component';\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport {DataService} from \"./services/data.service\";\r\nimport { SummaryPipe } from './pipes/summary.pipe';\r\nimport { SearchBarComponent } from './shared/search-bar/search-bar.component';\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport { BlogHomeComponent } from './components/blog-home/blog-home.component';\r\nimport { FilterPipe } from './pipes/filter.pipe';\r\nimport { TextFormatDirective } from './directives/text-format.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    BlogComponent,\r\n    ContactComponent,\r\n    NavbarComponent,\r\n    BlogItemComponent,\r\n    BlogItemTextComponent,\r\n    BlogItemImageComponent,\r\n    BlogItemDetailsComponent,\r\n    SummaryPipe,\r\n    SearchBarComponent,\r\n    BlogHomeComponent,\r\n    FilterPipe,\r\n    TextFormatDirective\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [\r\n    DataService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {DataService} from '../../services/data.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'blog-item-details',\r\n  templateUrl: './blog-item-details.component.html',\r\n  styleUrls: ['./blog-item-details.component.css']\r\n})\r\nexport class BlogItemDetailsComponent implements OnInit {\r\n\r\n  public image = '';\r\n  public text: string;\r\n  public id: string;\r\n\r\n  constructor(private dataService: DataService, private route: ActivatedRoute) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    let id: string;\r\n    this.route.paramMap\r\n      .subscribe(params => {\r\n        id = params.get('id');\r\n      });\r\n\r\n    this.dataService.getById(id).subscribe(res => {\r\n      this.image = res['image'];\r\n      this.text = res['text'];\r\n    });\r\n  }\r\n}\r\n","<div class=\"container text-center border p-5\">\r\n  <img [src]=\"image\" class=\"img-fluid mb-5\">\r\n  <p>\r\n    {{ text }}\r\n  </p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary mb-5\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" aria-current=\"page\" [routerLink]=\"['/']\">Home</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/contact']\">Contact</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/blog']\">Blog</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>Mateusz Janczak</title>\r\n</head>\r\n<body>\r\n<div class=\"container border p-5\">\r\n  <div class=\"row row-cols-1 row-cols-md-3 g-4\">\r\n    <div *ngFor=\"let item of items$ | filter: filterText\">\r\n      <blog-item [id]=\"item.id\" [image]=\"item.image\" [text]=\"item.title\">\r\n      </blog-item>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<footer class=\"footer bg-light fixed-bottom text-center pt-3\">\r\n  <p>Copyrights © Mateusz Janczak | 2021</p>\r\n</footer>\r\n</body>\r\n</html>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {DataService} from \"../../services/data.service\";\r\n\r\n@Component({\r\n  selector: 'blog',\r\n  templateUrl: './blog.component.html',\r\n  styleUrls: ['./blog.component.css']\r\n})\r\nexport class BlogComponent implements OnInit {\r\n\r\n  @Input() filterText: string;\r\n  public items$: any;\r\n\r\n  constructor(private service: DataService) {\r\n    this.getAll();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAll();\r\n  }\r\n\r\n  getAll(): void {\r\n    this.service.getAll().subscribe(response => {\r\n      this.items$ = response;\r\n    });\r\n  }\r\n\r\n  }\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'search-bar',\r\n  templateUrl: './search-bar.component.html',\r\n  styleUrls: ['./search-bar.component.css']\r\n})\r\nexport class SearchBarComponent implements OnInit {\r\n  filterText: string;\r\n\r\n  @Output() name = new EventEmitter<string>();\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute){ }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      this.filterText = params['name'];\r\n      this.sendFilter();\r\n    });\r\n  }\r\n\r\n  sendFilter() {\r\n    this.router.navigate(['/blog'], {queryParams: {name: this.filterText}});\r\n    this.name.emit(this.filterText);\r\n  }\r\n}\r\n","<div class=\"container pb-5\">\r\n  <input [(ngModel)]=\"filterText\"\r\n         (ngModelChange)=\"sendFilter()\"\r\n         placeholder=\"Wpisz nazwę...\" id=\"search\" type=\"search\"\r\n         class=\"form-control\" textFormat>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {BlogComponent} from \"./components/blog/blog.component\";\r\nimport {ContactComponent} from \"./components/contact/contact.component\";\r\nimport {HomeComponent} from \"./components/home/home.component\";\r\nimport {BlogItemDetailsComponent} from \"./components/blog-item-details/blog-item-details.component\";\r\nimport {BlogHomeComponent} from \"./components/blog-home/blog-home.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n  },\r\n  {\r\n    path: 'contact',\r\n    component: ContactComponent,\r\n  },\r\n  {\r\n    path: 'blog',\r\n    component: BlogHomeComponent,\r\n  },\r\n  {\r\n    path: 'blog/detail/:id',\r\n    component: BlogItemDetailsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import {Directive, ElementRef, HostListener} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[textFormat]'\r\n})\r\nexport class TextFormatDirective {\r\n  constructor(private el: ElementRef) { }\r\n\r\n  @HostListener('blur') onBlur() {\r\n    const value = this.el.nativeElement.value;\r\n    this.el.nativeElement.value = value.toLowerCase();\r\n  }\r\n}\r\n\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}